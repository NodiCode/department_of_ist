{"ast":null,"code":"var _jsxFileName = \"/Users/nodi/Documents/thesis_wesbsite/ist-app/src/pages/contacts/contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactMapGL, { GeolocateControl } from 'react-map-gl';\nimport mapboxgl from 'mapbox-gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyMap() {\n  _s();\n  const [viewport, setViewport] = useState({\n    latitude: 0,\n    longitude: 0,\n    zoom: 12\n  });\n  useEffect(() => {\n    mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\n    const geocoder = new mapboxgl.Geocoder({\n      accessToken: mapboxgl.accessToken\n    });\n    geocoder.geocode('1600 Amphitheatre Parkway, Mountain View, CA', result => {\n      setViewport({\n        latitude: result.features[0].center[1],\n        longitude: result.features[0].center[0],\n        zoom: 12\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is my page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(MyMap, \"2h9EeJOhQEg7msgKRA6DlN5DwQ4=\");\n_c = MyMap;\nexport default MyMap;\nvar _c;\n$RefreshReg$(_c, \"MyMap\");","map":{"version":3,"names":["React","useState","useEffect","ReactMapGL","GeolocateControl","mapboxgl","jsxDEV","_jsxDEV","MyMap","_s","viewport","setViewport","latitude","longitude","zoom","accessToken","process","env","REACT_APP_MAPBOX_TOKEN","geocoder","Geocoder","geocode","result","features","center","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nodi/Documents/thesis_wesbsite/ist-app/src/pages/contacts/contacts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMapGL, { GeolocateControl } from 'react-map-gl';\nimport mapboxgl from 'mapbox-gl';\n\nfunction MyMap() {\n  const [viewport, setViewport] = useState({\n    latitude: 0,\n    longitude: 0,\n    zoom: 12\n  });\n\n  useEffect(() => {\n    mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\n    const geocoder = new mapboxgl.Geocoder({\n      accessToken: mapboxgl.accessToken\n    });\n\n    geocoder.geocode('1600 Amphitheatre Parkway, Mountain View, CA', (result) => {\n      setViewport({\n        latitude: result.features[0].center[1],\n        longitude: result.features[0].center[0],\n        zoom: 12\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>This is my page</h1>\n      {/* <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"400px\"\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        onViewportChange={setViewport}\n      >\n        <GeolocateControl positionOptions={{ enableHighAccuracy: true }} />\n      </ReactMapGL> */}\n    </div>\n  );\n}\n\nexport default MyMap;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,IAAIC,gBAAgB,QAAQ,cAAc;AAC3D,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,QAAQ,EAAE,CAAC;IACXC,SAAS,EAAE,CAAC;IACZC,IAAI,EAAE;EACR,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACdG,QAAQ,CAACU,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;IACzD,MAAMC,QAAQ,GAAG,IAAId,QAAQ,CAACe,QAAQ,CAAC;MACrCL,WAAW,EAAEV,QAAQ,CAACU;IACxB,CAAC,CAAC;IAEFI,QAAQ,CAACE,OAAO,CAAC,8CAA8C,EAAGC,MAAM,IAAK;MAC3EX,WAAW,CAAC;QACVC,QAAQ,EAAEU,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;QACtCX,SAAS,EAAES,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;QACvCV,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAUpB;AAEV;AAACpB,EAAA,CApCQD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAsCd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}