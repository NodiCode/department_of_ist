{"ast":null,"code":"import axios from 'axios';\n\n// Register user\nexport const register = async (name, email, password) => {\n  try {\n    const res = await axios.post('http://localhost:4444/api/user/register', {\n      name,\n      email,\n      password\n    });\n    return res.data.token;\n  } catch (err) {\n    throw new Error(err.response.data.errors[0].msg);\n  }\n};\n\n// Login user\nexport const login = async (email, password) => {\n  try {\n    const res = await axios.post('http://localhost:4444/user/login', {\n      email,\n      password\n    });\n    return res.data.token;\n  } catch (err) {\n    throw new Error(err.response.data.errors[0].msg);\n  }\n};\n\n// Logout user\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\n\n// Get user profile\nexport const getUserProfile = async () => {\n  const token = localStorage.getItem('token');\n  if (!token) throw new Error('No token, authorization denied');\n  try {\n    const res = await axios.get('http://localhost:4444/user/profile', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return res.data;\n  } catch (err) {\n    throw new Error(err.response.data.errors[0].msg);\n  }\n};","map":{"version":3,"names":["axios","register","name","email","password","res","post","data","token","err","Error","response","errors","msg","login","logout","localStorage","removeItem","getUserProfile","getItem","get","headers","Authorization"],"sources":["/Users/nodi/Documents/thesis_wesbsite/client/src/contexts/auth.js"],"sourcesContent":["import axios from 'axios';\n\n// Register user\nexport const register = async (name, email, password) => {\n  try {\n    const res = await axios.post('http://localhost:4444/api/user/register', { name, email, password });\n    return res.data.token;\n  } catch (err) {\n    throw new Error(err.response.data.errors[0].msg);\n  }\n};\n\n// Login user\nexport const login = async (email, password) => {\n  try {\n    const res = await axios.post('http://localhost:4444/user/login', { email, password });\n    return res.data.token;\n  } catch (err) {\n    throw new Error(err.response.data.errors[0].msg);\n  }\n};\n\n// Logout user\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\n\n// Get user profile\nexport const getUserProfile = async () => {\n  const token = localStorage.getItem('token');\n  if (!token) throw new Error('No token, authorization denied');\n  try {\n    const res = await axios.get('http://localhost:4444/user/profile', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data;\n  } catch (err) {\n    throw new Error(err.response.data.errors[0].msg);\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EACvD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,yCAAyC,EAAE;MAAEJ,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IAClG,OAAOC,GAAG,CAACE,IAAI,CAACC,KAAK;EACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAM,IAAIC,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;EAClD;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOX,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,kCAAkC,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IACrF,OAAOC,GAAG,CAACE,IAAI,CAACC,KAAK;EACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAM,IAAIC,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;EAClD;AACF,CAAC;;AAED;AACA,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAM;EAC1BC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMV,KAAK,GAAGQ,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACX,KAAK,EAAE,MAAM,IAAIE,KAAK,CAAC,gCAAgC,CAAC;EAC7D,IAAI;IACF,MAAML,GAAG,GAAG,MAAML,KAAK,CAACoB,GAAG,CAAC,oCAAoC,EAAE;MAChEC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASd,KAAM;MACjC;IACF,CAAC,CAAC;IACF,OAAOH,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,MAAM,IAAIC,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;EAClD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}